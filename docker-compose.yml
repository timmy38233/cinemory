version: "3.7"

services:
  nginx:
    build: docker/nginx
    restart: on-failure
    volumes:
      # this will mount the cinemory-backend folder which contains the code to the docker container
      - ${PWD}/cinemory-backend:/var/www/cinemory-backend:delegated
      # this will mount the nginx logs so that you can check the logs for errors,
      # without logging into the container
      - ${PWD}/var/logs/nginx/:/var/log/nginx:delegated
      # this will create the server config to serve the cinemory-backend
      - ${PWD}/docker/nginx/cinemory-backend.conf:/etc/nginx/conf.d/cinemory-backend.conf:delegated
    ports:
    - "90:80"
    depends_on:
      - cinemory-backend
      - cinemory-frontend
    networks:
      - monitoring

  cinemory-backend:
    build: docker/php
    restart: on-failure
    volumes:
      # this will mount the cinemory-backend folder which contains the code to the docker container
      - ${PWD}/cinemory-backend:/var/www/cinemory-backend:delegated
      # this will mount the custom `.ini` to the container
      - ${PWD}/docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    networks:
      - monitoring

  cinemory-frontend:
    build: ./cinemory-frontend
    restart: on-failure
    # below line starts the project
    command: "npm start"
    depends_on:
      - cinemory-backend
    networks:
      - monitoring
    volumes:
      # this will mount the cinemory-frontend folder which contains the code to the docker container
      - ${PWD}/cinemory-frontend:/var/www/cinemory-frontend:delegated
      # this will mount the node_modules folder for faster performance
      - nodemodules:/var/www/cinemory-frontend/node_modules
    ports:
    - "3000:3000"

networks:
  monitoring:
    driver: bridge

# volumes
volumes:
  nodemodules: {}